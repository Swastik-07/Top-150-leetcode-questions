class Solution {

    boolean recur(int[] nums, int i, int n, int[] dp){
        if(i == n-1) return true;
        if(i > n-1) return false;


        if(dp[i]!=-1) return dp[i]==1;
        for(int j=1;j<=nums[i];j++){
            if(recur(nums, i+j, n, dp)) {
                dp[i]=1;
                return true;
                }
        }
        dp[i] = 0;
        return false;
    }
    public boolean canJump(int[] nums) {
        if(nums.length==1) return true;

        int[] dp=new int[nums.length];
        Arrays.fill(dp, -1);

        return recur(nums, 0, nums.length, dp);
    }
}
